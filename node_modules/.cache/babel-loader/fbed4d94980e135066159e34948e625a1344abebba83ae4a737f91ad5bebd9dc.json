{"ast":null,"code":"var _jsxFileName = \"F:\\\\10-outputting-cart-items\\\\src\\\\components\\\\Cart\\\\Form.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./form.css\";\nimport useInput from \"./input hooks/use-input\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form() {\n  _s();\n  const {\n    value: address,\n    handleEnteredData: handleAddress,\n    isValid: addressIsValid,\n    onBlurChangeHandler: onAddressBlurChangeHandler,\n    reset: resetAddress,\n    hasError: addressIsInvalid\n  } = useInput(value => value !== \"\");\n  const {\n    value: enteredEmail,\n    handleEnteredData: handleEmail,\n    isValid: emailIsValid,\n    onBlurChangeHandler: onEmailBlurChangeHandler,\n    reset: resetEmail,\n    hasError: emailIsInvalid\n  } = useInput(value => value !== \"\");\n  const onSubmitHandler = event => {\n    event.preventDefault();\n    onAddressBlurChangeHandler();\n    onEmailBlurChangeHandler();\n    if (!addressIsValid) {\n      return;\n    }\n    if (!emailIsValid) {\n      return;\n    }\n    resetAddress();\n    resetEmail();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"address\",\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"address\",\n          onChange: handleAddress,\n          onBlur: onAddressBlurChangeHandler,\n          value: address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), addressIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\",\n            fontSize: \"5px\"\n          },\n          children: \"Sorry address is invalid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          onChange: handleEmail,\n          onBlur: onEmailBlurChangeHandler,\n          value: enteredEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), emailIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\"\n          },\n          children: \"Sorry email is invalid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-btn\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Form, \"aMInC0W6Dq+MDA3p1MnzMHTC1KA=\", false, function () {\n  return [useInput, useInput];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useInput","Form","value","address","handleEnteredData","handleAddress","isValid","addressIsValid","onBlurChangeHandler","onAddressBlurChangeHandler","reset","resetAddress","hasError","addressIsInvalid","enteredEmail","handleEmail","emailIsValid","onEmailBlurChangeHandler","resetEmail","emailIsInvalid","onSubmitHandler","event","preventDefault","color","fontSize"],"sources":["F:/10-outputting-cart-items/src/components/Cart/Form.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./form.css\";\r\nimport useInput from \"./input hooks/use-input\";\r\n\r\nfunction Form() {\r\n  const {\r\n    value: address,\r\n    handleEnteredData: handleAddress,\r\n    isValid: addressIsValid,\r\n    onBlurChangeHandler: onAddressBlurChangeHandler,\r\n    reset: resetAddress,\r\n    hasError : addressIsInvalid\r\n  } = useInput((value) => value !== \"\");\r\n\r\n  const {\r\n    value: enteredEmail,\r\n    handleEnteredData: handleEmail,\r\n    isValid: emailIsValid,\r\n    onBlurChangeHandler: onEmailBlurChangeHandler,\r\n    reset: resetEmail,\r\n    hasError : emailIsInvalid\r\n  } = useInput((value) => value !== \"\"  );\r\n\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    onAddressBlurChangeHandler();\r\n    onEmailBlurChangeHandler();\r\n    if (!addressIsValid) {\r\n      return;\r\n    }\r\n    if (!emailIsValid){\r\n      return\r\n    }\r\n    resetAddress();\r\n    resetEmail();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmitHandler}>\r\n        <div>\r\n          <label htmlFor=\"address\">Address</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"address\"\r\n            onChange={handleAddress}\r\n            onBlur={onAddressBlurChangeHandler}\r\n            value={address}\r\n          />\r\n          {addressIsInvalid && (\r\n            <p style={{ color: \"red\", fontSize : \"5px\" }}>Sorry address is invalid</p>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            onChange={handleEmail}\r\n            onBlur={onEmailBlurChangeHandler}\r\n            value={enteredEmail}\r\n          />\r\n          {emailIsInvalid && (\r\n            <p style={{ color: \"red\" }}>Sorry email is invalid</p>\r\n          )}\r\n        </div>\r\n        <button className=\"submit-btn\">Submit</button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AACnB,OAAOC,QAAQ,MAAM,yBAAyB;AAAC;AAAA;AAE/C,SAASC,IAAI,GAAG;EAAA;EACd,MAAM;IACJC,KAAK,EAAEC,OAAO;IACdC,iBAAiB,EAAEC,aAAa;IAChCC,OAAO,EAAEC,cAAc;IACvBC,mBAAmB,EAAEC,0BAA0B;IAC/CC,KAAK,EAAEC,YAAY;IACnBC,QAAQ,EAAGC;EACb,CAAC,GAAGb,QAAQ,CAAEE,KAAK,IAAKA,KAAK,KAAK,EAAE,CAAC;EAErC,MAAM;IACJA,KAAK,EAAEY,YAAY;IACnBV,iBAAiB,EAAEW,WAAW;IAC9BT,OAAO,EAAEU,YAAY;IACrBR,mBAAmB,EAAES,wBAAwB;IAC7CP,KAAK,EAAEQ,UAAU;IACjBN,QAAQ,EAAGO;EACb,CAAC,GAAGnB,QAAQ,CAAEE,KAAK,IAAKA,KAAK,KAAK,EAAE,CAAG;EAEvC,MAAMkB,eAAe,GAAIC,KAAK,IAAK;IACjCA,KAAK,CAACC,cAAc,EAAE;IACtBb,0BAA0B,EAAE;IAC5BQ,wBAAwB,EAAE;IAC1B,IAAI,CAACV,cAAc,EAAE;MACnB;IACF;IACA,IAAI,CAACS,YAAY,EAAC;MAChB;IACF;IACAL,YAAY,EAAE;IACdO,UAAU,EAAE;EACd,CAAC;EAED,oBACE;IAAA,uBACE;MAAM,QAAQ,EAAEE,eAAgB;MAAA,wBAC9B;QAAA,wBACE;UAAO,OAAO,EAAC,SAAS;UAAA,UAAC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAQ,eACxC;UACE,IAAI,EAAC,MAAM;UACX,EAAE,EAAC,SAAS;UACZ,QAAQ,EAAEf,aAAc;UACxB,MAAM,EAAEI,0BAA2B;UACnC,KAAK,EAAEN;QAAQ;UAAA;UAAA;UAAA;QAAA,QACf,EACDU,gBAAgB,iBACf;UAAG,KAAK,EAAE;YAAEU,KAAK,EAAE,KAAK;YAAEC,QAAQ,EAAG;UAAM,CAAE;UAAA,UAAC;QAAwB;UAAA;UAAA;UAAA;QAAA,QACvE;MAAA;QAAA;QAAA;QAAA;MAAA,QACG,eACN;QAAA,wBACE;UAAO,OAAO,EAAC,OAAO;UAAA,UAAC;QAAK;UAAA;UAAA;UAAA;QAAA,QAAQ,eACpC;UACE,IAAI,EAAC,OAAO;UACZ,EAAE,EAAC,OAAO;UACV,QAAQ,EAAET,WAAY;UACtB,MAAM,EAAEE,wBAAyB;UACjC,KAAK,EAAEH;QAAa;UAAA;UAAA;UAAA;QAAA,QACpB,EACDK,cAAc,iBACb;UAAG,KAAK,EAAE;YAAEI,KAAK,EAAE;UAAM,CAAE;UAAA,UAAC;QAAsB;UAAA;UAAA;UAAA;QAAA,QACnD;MAAA;QAAA;QAAA;QAAA;MAAA,QACG,eACN;QAAQ,SAAS,EAAC,YAAY;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EACzC,iBACN;AAEP;AAAC,GAlEQtB,IAAI;EAAA,QAQPD,QAAQ,EASRA,QAAQ;AAAA;AAAA,KAjBLC,IAAI;AAoEb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}