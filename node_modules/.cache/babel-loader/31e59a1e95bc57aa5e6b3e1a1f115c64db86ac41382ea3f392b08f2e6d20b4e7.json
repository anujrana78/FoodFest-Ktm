{"ast":null,"code":"var _jsxFileName = \"F:\\\\10-outputting-cart-items\\\\src\\\\components\\\\Cart\\\\Form.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./form.css\";\nimport useInput from \"./input hooks/use-input\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form() {\n  _s();\n  const {\n    value: name,\n    handleEnteredData: handleName,\n    isValid: nameIsValid,\n    onBlurChangeHandler: onNameBlurChangeHandler,\n    reset: resetName,\n    hasError: nameIsInvalid\n  } = useInput(value => value !== \"\");\n  const {\n    value: enteredStreet,\n    handleEnteredData: handleStreet,\n    isValid: streetIsValid,\n    onBlurChangeHandler: onStreetBlurChangeHandler,\n    reset: resetStreet,\n    hasError: streetIsInvalid\n  } = useInput(value => value !== \"\");\n  const onSubmitHandler = event => {\n    event.preventDefault();\n    onNameBlurChangeHandler();\n    onStreetBlurChangeHandler();\n    if (!nameIsValid) {\n      return;\n    }\n    if (!streetIsValid) {\n      return;\n    }\n    resetName();\n    resetStreet();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"address\",\n          children: \"Your Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"address\",\n          onChange: handleName,\n          onBlur: onNameBlurChangeHandler,\n          value: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), nameIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\",\n            fontSize: \"12px\"\n          },\n          children: \"Name cannot be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Street\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          onChange: handleStreet,\n          onBlur: onStreetBlurChangeHandler,\n          value: enteredStreet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), streetIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\",\n            fontSize: \"12px\"\n          },\n          children: \"Sorry street is invalid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-btn\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Form, \"AoLydJnx8EKO60FnM7FsLailo6U=\", false, function () {\n  return [useInput, useInput];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useInput","Form","value","name","handleEnteredData","handleName","isValid","nameIsValid","onBlurChangeHandler","onNameBlurChangeHandler","reset","resetName","hasError","nameIsInvalid","enteredStreet","handleStreet","streetIsValid","onStreetBlurChangeHandler","resetStreet","streetIsInvalid","onSubmitHandler","event","preventDefault","color","fontSize"],"sources":["F:/10-outputting-cart-items/src/components/Cart/Form.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./form.css\";\r\nimport useInput from \"./input hooks/use-input\";\r\n\r\nfunction Form() {\r\n  const {\r\n    value: name,\r\n    handleEnteredData: handleName,\r\n    isValid: nameIsValid,\r\n    onBlurChangeHandler: onNameBlurChangeHandler,\r\n    reset: resetName,\r\n    hasError : nameIsInvalid\r\n  } = useInput((value) => value !== \"\");\r\n\r\n  const {\r\n    value: enteredStreet,\r\n    handleEnteredData: handleStreet,\r\n    isValid: streetIsValid,\r\n    onBlurChangeHandler: onStreetBlurChangeHandler,\r\n    reset: resetStreet,\r\n    hasError : streetIsInvalid\r\n  } = useInput((value) => value !== \"\"  );\r\n\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    onNameBlurChangeHandler();\r\n    onStreetBlurChangeHandler();\r\n    if (!nameIsValid) {\r\n      return;\r\n    }\r\n    if (!streetIsValid){\r\n      return\r\n    }\r\n    resetName();\r\n    resetStreet();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmitHandler}>\r\n        <div>\r\n          <label htmlFor=\"address\">Your Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"address\"\r\n            onChange={handleName}\r\n            onBlur={onNameBlurChangeHandler}\r\n            value={name}\r\n          />\r\n          {nameIsInvalid && (\r\n            <p style={{ color: \"red\", fontSize : \"12px\" }}>Name cannot be empty</p>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"email\">Street</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            onChange={handleStreet}\r\n            onBlur={onStreetBlurChangeHandler}\r\n            value={enteredStreet}\r\n          />\r\n          {streetIsInvalid && (\r\n            <p style={{ color: \"red\",fontSize : \"12px\" }}>Sorry street is invalid</p>\r\n          )}\r\n        </div>\r\n        <button className=\"submit-btn\">Submit</button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AACnB,OAAOC,QAAQ,MAAM,yBAAyB;AAAC;AAAA;AAE/C,SAASC,IAAI,GAAG;EAAA;EACd,MAAM;IACJC,KAAK,EAAEC,IAAI;IACXC,iBAAiB,EAAEC,UAAU;IAC7BC,OAAO,EAAEC,WAAW;IACpBC,mBAAmB,EAAEC,uBAAuB;IAC5CC,KAAK,EAAEC,SAAS;IAChBC,QAAQ,EAAGC;EACb,CAAC,GAAGb,QAAQ,CAAEE,KAAK,IAAKA,KAAK,KAAK,EAAE,CAAC;EAErC,MAAM;IACJA,KAAK,EAAEY,aAAa;IACpBV,iBAAiB,EAAEW,YAAY;IAC/BT,OAAO,EAAEU,aAAa;IACtBR,mBAAmB,EAAES,yBAAyB;IAC9CP,KAAK,EAAEQ,WAAW;IAClBN,QAAQ,EAAGO;EACb,CAAC,GAAGnB,QAAQ,CAAEE,KAAK,IAAKA,KAAK,KAAK,EAAE,CAAG;EAEvC,MAAMkB,eAAe,GAAIC,KAAK,IAAK;IACjCA,KAAK,CAACC,cAAc,EAAE;IACtBb,uBAAuB,EAAE;IACzBQ,yBAAyB,EAAE;IAC3B,IAAI,CAACV,WAAW,EAAE;MAChB;IACF;IACA,IAAI,CAACS,aAAa,EAAC;MACjB;IACF;IACAL,SAAS,EAAE;IACXO,WAAW,EAAE;EACf,CAAC;EAED,oBACE;IAAA,uBACE;MAAM,QAAQ,EAAEE,eAAgB;MAAA,wBAC9B;QAAA,wBACE;UAAO,OAAO,EAAC,SAAS;UAAA,UAAC;QAAS;UAAA;UAAA;UAAA;QAAA,QAAQ,eAC1C;UACE,IAAI,EAAC,MAAM;UACX,EAAE,EAAC,SAAS;UACZ,QAAQ,EAAEf,UAAW;UACrB,MAAM,EAAEI,uBAAwB;UAChC,KAAK,EAAEN;QAAK;UAAA;UAAA;UAAA;QAAA,QACZ,EACDU,aAAa,iBACZ;UAAG,KAAK,EAAE;YAAEU,KAAK,EAAE,KAAK;YAAEC,QAAQ,EAAG;UAAO,CAAE;UAAA,UAAC;QAAoB;UAAA;UAAA;UAAA;QAAA,QACpE;MAAA;QAAA;QAAA;QAAA;MAAA,QACG,eACN;QAAA,wBACE;UAAO,OAAO,EAAC,OAAO;UAAA,UAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAQ,eACrC;UACE,IAAI,EAAC,OAAO;UACZ,EAAE,EAAC,OAAO;UACV,QAAQ,EAAET,YAAa;UACvB,MAAM,EAAEE,yBAA0B;UAClC,KAAK,EAAEH;QAAc;UAAA;UAAA;UAAA;QAAA,QACrB,EACDK,eAAe,iBACd;UAAG,KAAK,EAAE;YAAEI,KAAK,EAAE,KAAK;YAACC,QAAQ,EAAG;UAAO,CAAE;UAAA,UAAC;QAAuB;UAAA;UAAA;UAAA;QAAA,QACtE;MAAA;QAAA;QAAA;QAAA;MAAA,QACG,eACN;QAAQ,SAAS,EAAC,YAAY;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EACzC,iBACN;AAEP;AAAC,GAlEQvB,IAAI;EAAA,QAQPD,QAAQ,EASRA,QAAQ;AAAA;AAAA,KAjBLC,IAAI;AAoEb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}