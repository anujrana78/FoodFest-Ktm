{"ast":null,"code":"var _jsxFileName = \"F:\\\\10-outputting-cart-items\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n  _s = $RefreshSig$();\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { useEffect, useState } from 'react';\n\n// const meals = [\n//   {\n//     id : \"01\",\n//     name : \"sushi\",\n//     description : \"Sushi that beats the taste\",\n//     price : 20.3\n//   },\n//   {\n//     id : \"02\",\n//     name : \"Momos\",\n//     description : \"Sushi that beats the taste\",\n//     price : 20.3\n//   },\n//   {\n//     id : \"03\",\n//     name : \"sushi\",\n//     description : \"Sushi that beats the taste\",\n//     price : 20.3\n//   }\n// ]\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableMeals = () => {\n  _s();\n  const [meal, setMeal] = useState([]);\n  const [isLoading, setisLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(\"https://foodfest-64439-default-rtdb.firebaseio.com/meals.json\");\n      const data = await response.json();\n      let loadedMeal = [];\n      for (const key in data) {\n        loadedMeal.push({\n          id: key,\n          name: data[key].name,\n          description: data[key].description,\n          price: data[key].price\n        });\n      }\n      setMeal(loadedMeal);\n      setisLoading(false);\n    };\n    fetchData();\n  }, []);\n  const mealsList = meal.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(AvailableMeals, \"loR7Dc+zHau/70eMIU5I4EPk2fs=\");\n_c = AvailableMeals;\nexport default AvailableMeals;\nvar _c;\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["Card","MealItem","classes","useEffect","useState","AvailableMeals","meal","setMeal","isLoading","setisLoading","fetchData","response","fetch","data","json","loadedMeal","key","push","id","name","description","price","mealsList","map","meals"],"sources":["F:/10-outputting-cart-items/src/components/Meals/AvailableMeals.js"],"sourcesContent":["import Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { useEffect, useState } from 'react';\n\n// const meals = [\n//   {\n//     id : \"01\",\n//     name : \"sushi\",\n//     description : \"Sushi that beats the taste\",\n//     price : 20.3\n//   },\n//   {\n//     id : \"02\",\n//     name : \"Momos\",\n//     description : \"Sushi that beats the taste\",\n//     price : 20.3\n//   },\n//   {\n//     id : \"03\",\n//     name : \"sushi\",\n//     description : \"Sushi that beats the taste\",\n//     price : 20.3\n//   }\n// ]\n\n\n\nconst AvailableMeals = () => {\nconst [meal,setMeal] = useState([])\nconst [isLoading,setisLoading] = useState(true)\n\n useEffect(() => {\n  const fetchData = async () => {\n    const response =  await fetch(\"https://foodfest-64439-default-rtdb.firebaseio.com/meals.json\")\n    const data = await response.json();\n    let loadedMeal= []\n    for(const key in data){\n      \n      loadedMeal.push(\n        {\n          id : key,\n          name : data[key].name,\n          description : data[key].description,\n          price : data[key].price\n        }); \n    }\n    setMeal(loadedMeal)\n    setisLoading(false)\n  }\n  \n  fetchData()\n },[]) \n\n\n  \n  const mealsList = meal.map((meal) => (\n    <MealItem\n      key={meal.id}\n      id={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n\n  return (\n    <section className={classes.meals}>\n      <Card>\n        {isLoading && <p>Loading</p>}\n        <ul>{mealsList}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,OAAO,MAAM,6BAA6B;AACjD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA,MAAMC,cAAc,GAAG,MAAM;EAAA;EAC7B,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EACnC,MAAM,CAACI,SAAS,EAACC,YAAY,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACf,MAAMO,SAAS,GAAG,YAAY;MAC5B,MAAMC,QAAQ,GAAI,MAAMC,KAAK,CAAC,+DAA+D,CAAC;MAC9F,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MAClC,IAAIC,UAAU,GAAE,EAAE;MAClB,KAAI,MAAMC,GAAG,IAAIH,IAAI,EAAC;QAEpBE,UAAU,CAACE,IAAI,CACb;UACEC,EAAE,EAAGF,GAAG;UACRG,IAAI,EAAGN,IAAI,CAACG,GAAG,CAAC,CAACG,IAAI;UACrBC,WAAW,EAAGP,IAAI,CAACG,GAAG,CAAC,CAACI,WAAW;UACnCC,KAAK,EAAGR,IAAI,CAACG,GAAG,CAAC,CAACK;QACpB,CAAC,CAAC;MACN;MACAd,OAAO,CAACQ,UAAU,CAAC;MACnBN,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC;IAEDC,SAAS,EAAE;EACZ,CAAC,EAAC,EAAE,CAAC;EAIJ,MAAMY,SAAS,GAAGhB,IAAI,CAACiB,GAAG,CAAEjB,IAAI,iBAC9B,QAAC,QAAQ;IAEP,EAAE,EAAEA,IAAI,CAACY,EAAG;IACZ,IAAI,EAAEZ,IAAI,CAACa,IAAK;IAChB,WAAW,EAAEb,IAAI,CAACc,WAAY;IAC9B,KAAK,EAAEd,IAAI,CAACe;EAAM,GAJbf,IAAI,CAACY,EAAE;IAAA;IAAA;IAAA;EAAA,QAMf,CAAC;EAEF,oBACE;IAAS,SAAS,EAAEhB,OAAO,CAACsB,KAAM;IAAA,uBAChC,QAAC,IAAI;MAAA,WACFhB,SAAS,iBAAI;QAAA,UAAG;MAAO;QAAA;QAAA;QAAA;MAAA,QAAI,eAC5B;QAAA,UAAKc;MAAS;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA;EACf;IAAA;IAAA;IAAA;EAAA,QACC;AAEd,CAAC;AAAC,GA9CIjB,cAAc;AAAA,KAAdA,cAAc;AAgDpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}